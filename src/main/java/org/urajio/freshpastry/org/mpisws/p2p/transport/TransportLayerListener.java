package org.urajio.freshpastry.org.mpisws.p2p.transport;

import java.util.Map;

/**
 * Can be installed on a ListenableTransportLayer
 * @author Jeff Hoye
 *
 * @param <Identifier>
 */
public interface TransportLayerListener<Identifier> {
  
  /**
   * Called when upstream bandwidth was consumed.
   * 
   * @param bytes how many
   * @param i who
   * @param options 
   * @param passthrough for bytes that were written on behalf of another layer, false if it is generated by this layer(overhead)
   * @param socket true if it was on a socket, false if it was a message
   */
  void wrote(int bytes, Identifier i, Map<String, Object> options, boolean passthrough, boolean socket);
  
  /**
   * Called when downstream bandwidth was consumed.
   * 
   * @param bytes how many
   * @param i who
   * @param options 
   * @param passthrough for bytes that were written on behalf of another layer, false if it is generated by this layer(overhead)
   * @param socket true if it was on a socket, false if it was a message
   */
  void read(int bytes, Identifier i, Map<String, Object> options, boolean passthrough, boolean socket);
  
  
}
